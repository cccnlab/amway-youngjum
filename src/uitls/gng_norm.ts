// Age group 1 for age range 50 - 65 and group 2 for age > 65
const MU1 = 135707.5987535954
const SD1 = 31501.567426552814
const MU2 = 126337.98702830188
const SD2 = 32775.71879494309

const VAL1_51_PROB = [0.        , 0.        , 0.        , 0.        , 0.        ,
  0.        , 0.        , 0.        , 0.        , 0.01246405,
  0.02492809, 0.03451582, 0.04985618, 0.06807287, 0.08053691,
  0.10067114, 0.11888782, 0.14765101, 0.18504314, 0.22051774,
  0.26270374, 0.31831256, 0.39117929, 0.46212848, 0.54458293,
  0.63087248, 0.7114094 , 0.79769895, 0.87152445, 0.93000959,
  0.95973154, 0.98274209, 0.99328859, 0.99616491, 0.99808245,
  0.99808245, 0.99808245, 0.99904123, 0.99904123, 0.99904123,
  0.99904123, 0.99904123, 0.99904123, 0.99904123, 0.99904123,
  1.        , 1.        , 1.        , 1.        , 1.        ,
  1.        ]

const VAL2_51_PROB = [0.        , 0.        , 0.        , 0.        , 0.        ,
  0.        , 0.        , 0.        , 0.        , 0.00471698,
  0.04245283, 0.05896226, 0.0754717 , 0.09669811, 0.125     ,
  0.1509434 , 0.18867925, 0.21462264, 0.25      , 0.2995283 ,
  0.35377358, 0.42924528, 0.51179245, 0.5990566 , 0.70518868,
  0.78773585, 0.85377358, 0.91037736, 0.94575472, 0.96226415,
  0.9740566 , 0.98820755, 0.99056604, 0.99292453, 0.99292453,
  0.99292453, 0.99292453, 0.99292453, 0.99292453, 0.99292453,
  0.99292453, 0.99528302, 0.99528302, 0.99528302, 0.99528302,
  0.99528302, 0.99528302, 0.99764151, 1.        , 1.        ,
  1.        ]

function ageGroup1Prob (score: number) {
  const probIndex = Math.min(Math.floor(score / 6000),50)
  return VAL1_51_PROB[probIndex]
}

function ageGroup2Prob (score: number) {
  const probIndex = Math.min(Math.floor(score / 6000),50)
  return VAL2_51_PROB[probIndex]
}

function GNG_Percentile (score: number, age: number) {
  return (age > 65) ? ageGroup2Prob(score) : ageGroup1Prob(score)
}

function GNG_D_PRIME (score: number, age: number) {

  const mu = age > 65 ? MU2 : MU1
  const sd = age > 65 ? SD2 : SD1
  return (score - mu) / sd
}

export { GNG_D_PRIME, GNG_Percentile }